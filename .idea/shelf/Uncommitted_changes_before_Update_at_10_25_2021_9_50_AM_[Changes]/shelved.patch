Index: humanPlayer.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from Player import Player\r\n\r\nclass humanPlayer(Player) :\r\n    def __init__(self):\r\n        super().__init__()\r\n\r\n    def placeShip(self, ship, size):\r\n        selectionIsValid = False\r\n        while selectionIsValid == False : #asks the user to input a coordinate point and a direction and then checks to see if there a valid spaces from that point in that direction\r\n            locationRow = int(input(\"what row do you want your ship in?\"))\r\n            locationCol = int(input(\"what column do you want your ship in?\"))\r\n            direction = str(input(\"what direction do you want to place the ship\"))\r\n            selectionIsValid = True\r\n            if locationRow + size > 10 or locationCol + size > 10 : #if the location plus the size is under 10 and thus inside the grid\r\n                selectionIsValid = False\r\n                continue\r\n            if direction == \"down\" : #if the user selects down\r\n                for i in range(size)  : #checks each space in column that a ship piece would be placed to see if it is valid, if any are not set selectionIsValid to false\r\n                    if not self.gridShips.isSpaceWater(locationRow + i, locationCol) :\r\n                        selectionIsValid = False\r\n            if direction == \"right\" : #if the user selects right\r\n                for i in range(size) :\r\n                    if not self.gridShips.isSpaceWater(locationRow, locationCol + i) : #checks each space in the row that a ship piece would be placed to see if it is valid, if any are not set selectionIsValid to false\r\n                        selectionIsValid = False\r\n            if selectionIsValid == False :\r\n                continue\r\n            else : #if all the code has been run and selectionIsValid is true than change the selected coordinate points to the ship value\r\n                if direction == \"down\" :\r\n                    self.gridShips.changeCol(locationCol , ship , locationRow , size)\r\n                    self.printGrids()\r\n                if direction == \"right\" :\r\n                    self.gridShips.changeRow(locationRow, ship, locationCol, size)\r\n                    self.printGrids()\r\n    def takeTurn(self, otherPlayer):\r\n        shotSelection = False\r\n        while shotSelection == False : #asks the user for a point to shoot\r\n            shotLocationRow = input(\"what row\")\r\n            shotLocationCol = input(\"what column\")\r\n            if shotLocationRow <= 9 and shotLocationCol <= 9 : #if the point is within the 10x10 gird\r\n                if not otherPlayer.gridShips.isSpaceWater() : #if the space is a ship print hit and update both the gridShot of the player and the gidShips of the otherPlayer with an x\r\n                    print(\"hit\")\r\n                    otherPlayer.gridShips.changeSingleSpace(shotLocationRow, shotLocationCol, \"x\")\r\n                    self.gridShots.changeSingleSpace(shotLocationRow, shotLocationCol, \"x\")\r\n                else : #if the space is water print miss and update both the gridShot of the player and the gridShips of the other player with an o\r\n                    otherPlayer.gridShips.changeSingleSpace(shotLocationRow, shotLocationCol, \"o\")\r\n                    self.gridShots.changeSingleSpace(shotLocationRow, shotLocationCol, \"o\")\r\n                    print(\"miss\")\r\n\r\n            else : #if the point is not within the grid prompt the user to reenter\r\n                print(\"input invalid\")\r\n                continue\r\n\r\n    def stillHasShips(self): #scans each grid and checks if there is a ship value left on the board\r\n        for row in range(10) :\r\n            for col in range(10) :\r\n                if self.gridShips.returnLocation(row,col) != \"~\" or self.gridShips.returnLocation(row,col) != \"x\" or self.gridShips.returnLocation(row,col) != \"o\" :\r\n                    return false\r\n                else :\r\n                    continue\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/humanPlayer.py b/humanPlayer.py
--- a/humanPlayer.py	(revision c0211d34f898df70ff21ead3e3266ec70d82cc48)
+++ b/humanPlayer.py	(date 1635169739729)
@@ -27,10 +27,8 @@
             else : #if all the code has been run and selectionIsValid is true than change the selected coordinate points to the ship value
                 if direction == "down" :
                     self.gridShips.changeCol(locationCol , ship , locationRow , size)
-                    self.printGrids()
                 if direction == "right" :
                     self.gridShips.changeRow(locationRow, ship, locationCol, size)
-                    self.printGrids()
     def takeTurn(self, otherPlayer):
         shotSelection = False
         while shotSelection == False : #asks the user for a point to shoot
@@ -51,8 +49,8 @@
                 continue
 
     def stillHasShips(self): #scans each grid and checks if there is a ship value left on the board
-        for row in range(10) :
-            for col in range(10) :
+        for row in range(9) :
+            for col in range(9) :
                 if self.gridShips.returnLocation(row,col) != "~" or self.gridShips.returnLocation(row,col) != "x" or self.gridShips.returnLocation(row,col) != "o" :
                     return false
                 else :
Index: Game.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from Player import Player\r\nfrom ComputerPlayer import ComputerPlayer\r\nfrom humanPlayer import humanPlayer\r\ndef Play(cp, hp):\r\n    cp.createShipGrid()\r\n    hp.createShipGrid()\r\n    while cp.stillHasShips() and hp.stillHasShips():\r\n        cp.printGrids()\r\n        hp.printGrids()\r\n        hp.takeTurn()\r\n        hp.printGrids()\r\n        cp.printGrids()\r\n        cp.takeTurn()\r\n        hp.printGrids()\r\n        cp.printGrids()\r\n    if cp.stillHasShips() and not hp.stillHasShips():\r\n        print(\"you lost\")\r\n    else:\r\n        print(\"you win\")\r\n\r\nc = ComputerPlayer()\r\nh = humanPlayer()\r\nPlay(c,h)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Game.py b/Game.py
--- a/Game.py	(revision c0211d34f898df70ff21ead3e3266ec70d82cc48)
+++ b/Game.py	(date 1635169775120)
@@ -20,7 +20,7 @@
 
 c = ComputerPlayer()
 h = humanPlayer()
-Play(c,h)
+Play(c, h)
 
 
 
